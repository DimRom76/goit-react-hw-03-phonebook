{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactElement/ContactElement.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactElement/ContactElement.module.css"],"names":["module","exports","ContactForm","state","name","number","schema","Yup","shape","min","max","required","length","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","props","isSubmitting","errors","touched","className","s","form","form_field","htmlFor","form_label","placeholder","error_message","type","pattern","disabled","Component","ContactElement","id","onDeleteContact","element","onClick","ContactList","contacts","filter","el","toLowerCase","indexOf","map","Filter","handleInput","onInput","App","deleteContact","contactId","setState","prevState","some","alert","uuidv4","newContacts","concat","bind","event","this","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.954c200e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__cGHLA\",\"form_field\":\"ContactForm_form_field__2Kn31\",\"form_label\":\"ContactForm_form_label__1IKEr\",\"error_message\":\"ContactForm_error_message__3fjd2\"};","import { Component } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      number: '',\n    };\n  }\n\n  render() {\n    let schema = Yup.object().shape({\n      name: Yup.string()\n        .min(2, 'Too Short!')\n        .max(25, 'Too Long!')\n        .required('Requerid'),\n      number: Yup.string().length(9, 'Wrong length!').required('Requerid'),\n    });\n\n    return (\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={schema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          this.props.onSubmit(values);\n\n          //форма в режиме отправляется, кнопка неактивная пока не отменим\n          //нужно если бросам запрос на сервер например\n          setSubmitting(false);\n\n          //очищаем форму к начальным значениям\n          resetForm();\n        }}\n      >\n        {({ isSubmitting, errors, touched }) => (\n          <Form className={s.form}>\n            <div className={s.form_field}>\n              <label\n                htmlFor=\"name\n                  \"\n                className={s.form_label}\n              >\n                Name\n              </label>\n              <Field\n                className=\"form_input\"\n                name=\"name\"\n                placeholder=\"Input name...\"\n              />\n              {errors.name && touched.name ? (\n                <div className={s.error_message}>{errors.name}</div>\n              ) : null}\n            </div>\n\n            <div className={s.form_field}>\n              <label htmlFor=\"number\" className={s.form_label}>\n                Number\n              </label>\n              <Field\n                className=\"form_input\"\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n                placeholder=\"555-55-55\"\n              />\n              {errors.number && touched.number ? (\n                <div className={s.error_message}>{errors.number}</div>\n              ) : null}\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={s.form_field}\n            >\n              Add contact\n            </button>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactElement.module.css';\n\nexport default function ContactElement({ id, name, number, onDeleteContact }) {\n  return (\n    <li>\n      <p className={s.element}>\n        {name}: {number}\n      </p>\n      <button onClick={() => onDeleteContact(id)}>Delete</button>\n    </li>\n  );\n}\n\nContactElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ContactElement from './ContactElement/ContactElement';\n\nexport default function ContactList({\n  contacts,\n  filter = '',\n  onDeleteContact,\n}) {\n  return (\n    <ul>\n      {contacts\n        .filter(el => {\n          const foundPos = el.name.toLowerCase().indexOf(filter.toLowerCase());\n          return foundPos === -1 ? false : true;\n        })\n        .map(el => {\n          return (\n            <ContactElement\n              key={el.id}\n              id={el.id}\n              name={el.name}\n              number={el.number}\n              onDeleteContact={onDeleteContact}\n            />\n          );\n        })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Filter({ handleInput }) {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <input\n        className=\"form_input\"\n        type=\"text\"\n        name=\"filter\"\n        onInput={handleInput}\n      ></input>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  handleInput: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      ],\n      filter: '',\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteContact = this.deleteContact.bind(this);\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== contactId),\n    }));\n  };\n\n  handleInput(event) {\n    this.setState({ filter: event.target.value });\n  }\n\n  onSubmit = values => {\n    const { contacts } = this.state;\n    if (\n      contacts.some(el => el.name.toLowerCase() === values.name.toLowerCase())\n    ) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n    values.id = uuidv4();\n    const newContacts = contacts.concat(values);\n    this.setState(prevState => {\n      return { ...prevState, contacts: newContacts };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter handleInput={this.handleInput} />\n        <ContactList\n          contacts={contacts}\n          filter={filter}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ContactElement_element__PcrQ8\"};"],"sourceRoot":""}